directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Bench implements Node {
  id: ID!
  os: String!
  arch: String!
  cpu: String!
  package: String!
  pass: Boolean!
  results: [BenchResult!]
}
"""A connection to a list of items."""
type BenchConnection {
  """A list of edges."""
  edges: [BenchEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type BenchEdge {
  """The item at the end of the edge."""
  node: Bench
  """A cursor for use in pagination."""
  cursor: Cursor!
}
type BenchResult implements Node {
  id: ID!
  name: String!
  n: Int!
  nsperop: Float! @goField(name: "NsPerOp", forceResolver: false)
  allocedbytesperop: Int! @goField(name: "AllocedBytesPerOp", forceResolver: false)
  allocsperop: Int! @goField(name: "AllocsPerOp", forceResolver: false)
  mbpers: Float! @goField(name: "MBPerS", forceResolver: false)
  measured: Int!
  ord: Int!
}
"""A connection to a list of items."""
type BenchResultConnection {
  """A list of edges."""
  edges: [BenchResultEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type BenchResultEdge {
  """The item at the end of the edge."""
  node: BenchResult
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""
CreateBenchInput is used for create Bench object.
Input was generated by ent.
"""
input CreateBenchInput {
  os: String!
  arch: String!
  cpu: String!
  package: String!
  pass: Boolean!
  resultIDs: [ID!]
}
"""
CreateBenchResultInput is used for create BenchResult object.
Input was generated by ent.
"""
input CreateBenchResultInput {
  name: String!
  n: Int!
  nsperop: Float!
  allocedbytesperop: Int!
  allocsperop: Int!
  mbpers: Float!
  measured: Int!
  ord: Int!
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/nibbleshift/gorb/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  benches(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int
  ): BenchConnection!
  benchResults(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int
  ): BenchResultConnection!
}
