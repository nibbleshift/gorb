// Code generated by ent, DO NOT EDIT.

package ent

// CreateBenchInput represents a mutation input for creating benches.
type CreateBenchInput struct {
	OS        string
	Arch      string
	CPU       string
	Package   string
	Pass      bool
	ResultIDs []int
}

// Mutate applies the CreateBenchInput on the BenchMutation builder.
func (i *CreateBenchInput) Mutate(m *BenchMutation) {
	m.SetOS(i.OS)
	m.SetArch(i.Arch)
	m.SetCPU(i.CPU)
	m.SetPackage(i.Package)
	m.SetPass(i.Pass)
	if v := i.ResultIDs; len(v) > 0 {
		m.AddResultIDs(v...)
	}
}

// SetInput applies the change-set in the CreateBenchInput on the BenchCreate builder.
func (c *BenchCreate) SetInput(i CreateBenchInput) *BenchCreate {
	i.Mutate(c.Mutation())
	return c
}
