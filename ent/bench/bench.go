// Code generated by ent, DO NOT EDIT.

package bench

const (
	// Label holds the string label denoting the bench type in the database.
	Label = "bench"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOs holds the string denoting the os field in the database.
	FieldOs = "os"
	// FieldArch holds the string denoting the arch field in the database.
	FieldArch = "arch"
	// FieldCPU holds the string denoting the cpu field in the database.
	FieldCPU = "cpu"
	// FieldPackage holds the string denoting the package field in the database.
	FieldPackage = "package"
	// FieldPass holds the string denoting the pass field in the database.
	FieldPass = "pass"
	// EdgeBenchResult holds the string denoting the bench_result edge name in mutations.
	EdgeBenchResult = "bench_result"
	// Table holds the table name of the bench in the database.
	Table = "benches"
	// BenchResultTable is the table that holds the bench_result relation/edge.
	BenchResultTable = "bench_results"
	// BenchResultInverseTable is the table name for the BenchResult entity.
	// It exists in this package in order to avoid circular dependency with the "benchresult" package.
	BenchResultInverseTable = "bench_results"
	// BenchResultColumn is the table column denoting the bench_result relation/edge.
	BenchResultColumn = "bench_bench_result"
)

// Columns holds all SQL columns for bench fields.
var Columns = []string{
	FieldID,
	FieldOs,
	FieldArch,
	FieldCPU,
	FieldPackage,
	FieldPass,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
