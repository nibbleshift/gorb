schema:
  - graph/ent.graphql
  - graph/gorb.graphql

exec:
  filename: graph/generated/generated.go
  package: generated

resolver:
  # Tell gqlgen to generate resolvers next to the schema file.
  layout: follow-schema
  dir: graph
  package: graph

# gqlgen will search for any type names in the schema in the generated
# ent package. If they match it will use them, otherwise it will new ones.
autobind:
  - github.com/nibbleshift/gorb/ent
  - github.com/nibbleshift/gorb/ent/bench
  - github.com/nibbleshift/gorb/ent/benchresult

models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.IntID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Node:
    model:
      # ent.Noder is the new interface generated by the Node template.
      - github.com/nibbleshift/gorb/ent.Noder
